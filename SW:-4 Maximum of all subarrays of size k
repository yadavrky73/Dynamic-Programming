M-1
class Solution:
    
    #Function to find maximum of each subarray of size k.
    def max_of_subarrays(self,arr,n,k):
        
        #code here
        i=0
        j=0
        mx=0
        a=[]
        while(j<n):
            #a.append(arr[j])
            if(j-i+1<k):
                j+=1
            elif (j-i+1==k):
                a.append(max(arr[i:j+1]))
                j+=1
                i+=1
        return a
        
        
M-2
class Solution
{
  public:
    //Function to find maximum of each subarray of size k.
    vector <int> max_of_subarrays(int *arr, int n, int k)
    {
        // your code here
        int i=0,j=0;
        priority_queue<int>q;
        vector<int>v;
        while(j<n){
            q.push(arr[j]);
            if(j-i+1<k){
                j++;
            }
            else if(j-i+1==k){
                v.push_back(q.top());
                if(arr[i]==q.top()){
                    q.pop();
                }
                i++;
                j++;
            }
        }
        return v;
    }
};
